name: flutter_dev_catalyst
description: A comprehensive Flutter plugin that accelerates development with smart automation, reducing boilerplate code and development time by 60%.
version: 1.0.0
homepage: https://github.com/yourusername/flutter_dev_catalyst
repository: https://github.com/yourusername/flutter_dev_catalyst
issue_tracker: https://github.com/yourusername/flutter_dev_catalyst/issues
documentation: https://pub.dev/documentation/flutter_dev_catalyst/latest/

environment:
  sdk: ^3.9.2
  flutter: '>=3.3.0'

dependencies:
  flutter:
    sdk: flutter

  # HTTP & Networking
  dio: ^5.4.0
  http: ^1.1.2
  connectivity_plus: ^7.0.0

  # Storage
  shared_preferences: ^2.2.2
  flutter_secure_storage: ^9.0.0
  hive: ^2.2.3
  hive_flutter: ^1.1.0

  # State Management & DI
  provider: ^6.1.1
  get_it: ^7.6.7

  # UI & Images
  cached_network_image: ^3.3.1
  flutter_cache_manager: ^3.3.1

  # Utilities
  logger: ^2.0.2+1
  intl: ^0.19.0
  equatable: ^2.0.5
  json_annotation: ^4.8.1

  # Responsive
  flutter_screenutil: ^5.9.0

dev_dependencies:
  flutter_test:
    sdk: flutter
  flutter_lints: ^5.0.0
  mockito: ^5.4.4
  build_runner: ^2.4.7
  json_serializable: ^6.7.1
  test: ^1.24.9

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:
  # This section identifies this Flutter project as a plugin project.
  # The 'pluginClass' specifies the class (in Java, Kotlin, Swift, Objective-C, etc.)
  # which should be registered in the plugin registry. This is required for
  # using method channels.
  # The Android 'package' specifies package in which the registered class is.
  # This is required for using method channels on Android.
  # The 'ffiPlugin' specifies that native code should be built and bundled.
  # This is required for using `dart:ffi`.
  # All these are used by the tooling to maintain consistency when
  # adding or updating assets for this project.
  plugin:
    platforms:
      android:
        package: com.example.flutter_dev_catalyst
        pluginClass: FlutterDevCatalystPlugin
      ios:
        pluginClass: FlutterDevCatalystPlugin
      linux:
        pluginClass: FlutterDevCatalystPlugin
      macos:
        pluginClass: FlutterDevCatalystPlugin
      windows:
        pluginClass: FlutterDevCatalystPluginCApi
      web:
        pluginClass: FlutterDevCatalystWeb
        fileName: flutter_dev_catalyst_web.dart

  # To add assets to your plugin package, add an assets section, like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg
  #
  # For details regarding assets in packages, see
  # https://flutter.dev/to/asset-from-package
  #
  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/to/resolution-aware-images

  # To add custom fonts to your plugin package, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts in packages, see
  # https://flutter.dev/to/font-from-package
